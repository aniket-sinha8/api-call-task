{"version":3,"sources":["components/ScrollComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ScrollComponent","state","photos","loading","page","prevY","this","setState","axios","get","then","res","data","getPhotos","observer","IntersectionObserver","handleObserver","bind","root","rootMargin","threshold","observe","loadingRef","entities","y","boundingClientRect","curPage","length","albumId","loadingTextCSS","display","className","style","minHeight","map","user","src","url","height","width","ref","margin","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAiFeA,E,kDA7Eb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,OAAQ,GACRC,SAAS,EACTC,KAAM,EACNC,MAAO,GANG,E,sDAUJD,GAAO,IAAD,OACdE,KAAKC,SAAS,CAAEJ,SAAS,IACzBK,IACGC,IADH,4DAEyDL,EAFzD,eAIGM,MAAK,SAAAC,GACJ,EAAKJ,SAAS,CAAEL,OAAO,GAAD,mBAAM,EAAKD,MAAMC,QAAjB,YAA4BS,EAAIC,SACtD,EAAKL,SAAS,CAAEJ,SAAS,S,0CAK7BG,KAAKO,UAAUP,KAAKL,MAAMG,MAQ1BE,KAAKQ,SAAW,IAAIC,qBAClBT,KAAKU,eAAeC,KAAKX,MAPb,CACZY,KAAM,KACNC,WAAY,MACZC,UAAW,IAObd,KAAKQ,SAASO,QAAQf,KAAKgB,c,qCAGdC,EAAUT,GACvB,IAAMU,EAAID,EAAS,GAAGE,mBAAmBD,EACzC,GAAIlB,KAAKL,MAAMI,MAAQmB,EAAG,CACxB,IACME,EADYpB,KAAKL,MAAMC,OAAOI,KAAKL,MAAMC,OAAOyB,OAAS,GACrCC,QAC1BtB,KAAKO,UAAUa,GACfpB,KAAKC,SAAS,CAAEH,KAAMsB,IAExBpB,KAAKC,SAAS,CAAEF,MAAOmB,M,+BAGf,IAAD,OAQDK,EAAiB,CAAEC,QAASxB,KAAKL,MAAME,QAAU,QAAU,QAEjE,OACE,sBAAK4B,UAAU,YAAf,UACE,qBAAKC,MAAO,CAAEC,UAAW,SAAzB,SACG3B,KAAKL,MAAMC,OAAOgC,KAAI,SAAAC,GAAI,OACzB,qBAAKC,IAAKD,EAAKE,IAAKC,OAAO,QAAQC,MAAM,eAG7C,qBACEC,IAAK,SAAAlB,GAAU,OAAK,EAAKA,WAAaA,GACtCU,MAjBa,CACjBM,OAAQ,QACRG,OAAQ,QAaN,SAIE,sBAAMT,MAAOH,EAAb,iC,GAvEoBa,aCQfC,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,OCMSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d32941fc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass ScrollComponent extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      photos: [],\r\n      loading: false,\r\n      page: 0,\r\n      prevY: 0\r\n    };\r\n  }\r\n\r\n  getPhotos(page) {\r\n    this.setState({ loading: true });\r\n    axios\r\n      .get(\r\n        `https://jsonplaceholder.typicode.com/photos?_page=${page}&_limit=10`\r\n      )\r\n      .then(res => {\r\n        this.setState({ photos: [...this.state.photos, ...res.data] });\r\n        this.setState({ loading: false });\r\n      });\r\n  } \r\n\r\n  componentDidMount() {\r\n    this.getPhotos(this.state.page);\r\n\r\n    var options = {\r\n      root: null,\r\n      rootMargin: \"0px\",\r\n      threshold: 1.0\r\n    };\r\n    \r\n    this.observer = new IntersectionObserver(\r\n      this.handleObserver.bind(this),\r\n      options\r\n    );\r\n    this.observer.observe(this.loadingRef);\r\n  }\r\n\r\n  handleObserver(entities, observer) {\r\n    const y = entities[0].boundingClientRect.y;\r\n    if (this.state.prevY > y) {\r\n      const lastPhoto = this.state.photos[this.state.photos.length - 1];\r\n      const curPage = lastPhoto.albumId;\r\n      this.getPhotos(curPage);\r\n      this.setState({ page: curPage });\r\n    }\r\n    this.setState({ prevY: y });\r\n  }\r\n\r\n  render() {\r\n    //Additional css styling\r\n    const loadingCSS = {\r\n      height: \"100px\",\r\n      margin: \"30px\"\r\n    };\r\n\r\n    //To change the loading icon behavior\r\n    const loadingTextCSS = { display: this.state.loading ? \"block\" : \"none\" };\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{ minHeight: \"800px\" }}>\r\n          {this.state.photos.map(user => (\r\n            <img src={user.url} height=\"100px\" width=\"200px\" />\r\n          ))}\r\n        </div>\r\n        <div\r\n          ref={loadingRef => (this.loadingRef = loadingRef)}\r\n          style={loadingCSS}\r\n        >\r\n          <span style={loadingTextCSS}>Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScrollComponent;","import './App.css';\nimport ScrollComponent from './components/ScrollComponent'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ScrollComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}